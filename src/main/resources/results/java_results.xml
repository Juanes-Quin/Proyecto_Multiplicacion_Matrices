<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<results>
    <result>
        <size>8</size>
        <algorithm>NaivOnArray</algorithm>
        <language>java</language>
        <executionTime>35800</executionTime>
    </result>
    <result>
        <size>8</size>
        <algorithm>NaivLoopUnrollingTwo</algorithm>
        <language>java</language>
        <executionTime>30300</executionTime>
    </result>
    <result>
        <size>8</size>
        <algorithm>NaivLoopUnrollingFour</algorithm>
        <language>java</language>
        <executionTime>32500</executionTime>
    </result>
    <result>
        <size>8</size>
        <algorithm>WinogradOriginal</algorithm>
        <language>java</language>
        <executionTime>36700</executionTime>
    </result>
    <result>
        <size>8</size>
        <algorithm>WinogradScaled</algorithm>
        <language>java</language>
        <executionTime>397500</executionTime>
    </result>
    <result>
        <size>8</size>
        <algorithm>StrassenNaiv</algorithm>
        <language>java</language>
        <executionTime>214100</executionTime>
    </result>
    <result>
        <size>8</size>
        <algorithm>StrassenWinograd</algorithm>
        <language>java</language>
        <executionTime>221300</executionTime>
    </result>
    <result>
        <size>8</size>
        <algorithm>III_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>44600</executionTime>
    </result>
    <result>
        <size>8</size>
        <algorithm>III_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>5455200</executionTime>
    </result>
    <result>
        <size>8</size>
        <algorithm>IV_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>42900</executionTime>
    </result>
    <result>
        <size>8</size>
        <algorithm>IV_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>760100</executionTime>
    </result>
    <result>
        <size>8</size>
        <algorithm>V_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>40800</executionTime>
    </result>
    <result>
        <size>8</size>
        <algorithm>V_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>701400</executionTime>
    </result>
    <result>
        <size>8</size>
        <algorithm>III_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>1036300</executionTime>
    </result>
    <result>
        <size>8</size>
        <algorithm>IV_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>1127500</executionTime>
    </result>
    <result>
        <size>16</size>
        <algorithm>NaivOnArray</algorithm>
        <language>java</language>
        <executionTime>179200</executionTime>
    </result>
    <result>
        <size>16</size>
        <algorithm>NaivLoopUnrollingTwo</algorithm>
        <language>java</language>
        <executionTime>128000</executionTime>
    </result>
    <result>
        <size>16</size>
        <algorithm>NaivLoopUnrollingFour</algorithm>
        <language>java</language>
        <executionTime>110800</executionTime>
    </result>
    <result>
        <size>16</size>
        <algorithm>WinogradOriginal</algorithm>
        <language>java</language>
        <executionTime>138600</executionTime>
    </result>
    <result>
        <size>16</size>
        <algorithm>WinogradScaled</algorithm>
        <language>java</language>
        <executionTime>182500</executionTime>
    </result>
    <result>
        <size>16</size>
        <algorithm>StrassenNaiv</algorithm>
        <language>java</language>
        <executionTime>205900</executionTime>
    </result>
    <result>
        <size>16</size>
        <algorithm>StrassenWinograd</algorithm>
        <language>java</language>
        <executionTime>203400</executionTime>
    </result>
    <result>
        <size>16</size>
        <algorithm>III_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>211500</executionTime>
    </result>
    <result>
        <size>16</size>
        <algorithm>III_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>273300</executionTime>
    </result>
    <result>
        <size>16</size>
        <algorithm>IV_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>192500</executionTime>
    </result>
    <result>
        <size>16</size>
        <algorithm>IV_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>247200</executionTime>
    </result>
    <result>
        <size>16</size>
        <algorithm>V_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>202300</executionTime>
    </result>
    <result>
        <size>16</size>
        <algorithm>V_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>254600</executionTime>
    </result>
    <result>
        <size>16</size>
        <algorithm>III_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>382400</executionTime>
    </result>
    <result>
        <size>16</size>
        <algorithm>IV_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>448800</executionTime>
    </result>
    <result>
        <size>32</size>
        <algorithm>NaivOnArray</algorithm>
        <language>java</language>
        <executionTime>1369200</executionTime>
    </result>
    <result>
        <size>32</size>
        <algorithm>NaivLoopUnrollingTwo</algorithm>
        <language>java</language>
        <executionTime>958200</executionTime>
    </result>
    <result>
        <size>32</size>
        <algorithm>NaivLoopUnrollingFour</algorithm>
        <language>java</language>
        <executionTime>848700</executionTime>
    </result>
    <result>
        <size>32</size>
        <algorithm>WinogradOriginal</algorithm>
        <language>java</language>
        <executionTime>993800</executionTime>
    </result>
    <result>
        <size>32</size>
        <algorithm>WinogradScaled</algorithm>
        <language>java</language>
        <executionTime>1095300</executionTime>
    </result>
    <result>
        <size>32</size>
        <algorithm>StrassenNaiv</algorithm>
        <language>java</language>
        <executionTime>1551700</executionTime>
    </result>
    <result>
        <size>32</size>
        <algorithm>StrassenWinograd</algorithm>
        <language>java</language>
        <executionTime>1555500</executionTime>
    </result>
    <result>
        <size>32</size>
        <algorithm>III_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>1444900</executionTime>
    </result>
    <result>
        <size>32</size>
        <algorithm>III_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>1726400</executionTime>
    </result>
    <result>
        <size>32</size>
        <algorithm>IV_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>1392700</executionTime>
    </result>
    <result>
        <size>32</size>
        <algorithm>IV_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>1564200</executionTime>
    </result>
    <result>
        <size>32</size>
        <algorithm>V_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>1565800</executionTime>
    </result>
    <result>
        <size>32</size>
        <algorithm>V_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>1738700</executionTime>
    </result>
    <result>
        <size>32</size>
        <algorithm>III_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>2319800</executionTime>
    </result>
    <result>
        <size>32</size>
        <algorithm>IV_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>2340600</executionTime>
    </result>
    <result>
        <size>64</size>
        <algorithm>NaivOnArray</algorithm>
        <language>java</language>
        <executionTime>3536900</executionTime>
    </result>
    <result>
        <size>64</size>
        <algorithm>NaivLoopUnrollingTwo</algorithm>
        <language>java</language>
        <executionTime>3980900</executionTime>
    </result>
    <result>
        <size>64</size>
        <algorithm>NaivLoopUnrollingFour</algorithm>
        <language>java</language>
        <executionTime>7146800</executionTime>
    </result>
    <result>
        <size>64</size>
        <algorithm>WinogradOriginal</algorithm>
        <language>java</language>
        <executionTime>4229500</executionTime>
    </result>
    <result>
        <size>64</size>
        <algorithm>WinogradScaled</algorithm>
        <language>java</language>
        <executionTime>4151400</executionTime>
    </result>
    <result>
        <size>64</size>
        <algorithm>StrassenNaiv</algorithm>
        <language>java</language>
        <executionTime>6151600</executionTime>
    </result>
    <result>
        <size>64</size>
        <algorithm>StrassenWinograd</algorithm>
        <language>java</language>
        <executionTime>6115500</executionTime>
    </result>
    <result>
        <size>64</size>
        <algorithm>III_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>3972300</executionTime>
    </result>
    <result>
        <size>64</size>
        <algorithm>III_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>3593300</executionTime>
    </result>
    <result>
        <size>64</size>
        <algorithm>IV_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>3134800</executionTime>
    </result>
    <result>
        <size>64</size>
        <algorithm>IV_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>3285300</executionTime>
    </result>
    <result>
        <size>64</size>
        <algorithm>V_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>3980900</executionTime>
    </result>
    <result>
        <size>64</size>
        <algorithm>V_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>4595200</executionTime>
    </result>
    <result>
        <size>64</size>
        <algorithm>III_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>7671200</executionTime>
    </result>
    <result>
        <size>64</size>
        <algorithm>IV_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>7007500</executionTime>
    </result>
    <result>
        <size>128</size>
        <algorithm>NaivOnArray</algorithm>
        <language>java</language>
        <executionTime>5910000</executionTime>
    </result>
    <result>
        <size>128</size>
        <algorithm>NaivLoopUnrollingTwo</algorithm>
        <language>java</language>
        <executionTime>6016300</executionTime>
    </result>
    <result>
        <size>128</size>
        <algorithm>NaivLoopUnrollingFour</algorithm>
        <language>java</language>
        <executionTime>7940100</executionTime>
    </result>
    <result>
        <size>128</size>
        <algorithm>WinogradOriginal</algorithm>
        <language>java</language>
        <executionTime>9292200</executionTime>
    </result>
    <result>
        <size>128</size>
        <algorithm>WinogradScaled</algorithm>
        <language>java</language>
        <executionTime>10201200</executionTime>
    </result>
    <result>
        <size>128</size>
        <algorithm>StrassenNaiv</algorithm>
        <language>java</language>
        <executionTime>18090000</executionTime>
    </result>
    <result>
        <size>128</size>
        <algorithm>StrassenWinograd</algorithm>
        <language>java</language>
        <executionTime>21720000</executionTime>
    </result>
    <result>
        <size>128</size>
        <algorithm>III_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>5121200</executionTime>
    </result>
    <result>
        <size>128</size>
        <algorithm>III_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>15032200</executionTime>
    </result>
    <result>
        <size>128</size>
        <algorithm>IV_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>1652400</executionTime>
    </result>
    <result>
        <size>128</size>
        <algorithm>IV_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>2677100</executionTime>
    </result>
    <result>
        <size>128</size>
        <algorithm>V_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>5766200</executionTime>
    </result>
    <result>
        <size>128</size>
        <algorithm>V_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>8979600</executionTime>
    </result>
    <result>
        <size>128</size>
        <algorithm>III_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>7354800</executionTime>
    </result>
    <result>
        <size>128</size>
        <algorithm>IV_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>4492400</executionTime>
    </result>
    <result>
        <size>256</size>
        <algorithm>NaivOnArray</algorithm>
        <language>java</language>
        <executionTime>41898500</executionTime>
    </result>
    <result>
        <size>256</size>
        <algorithm>NaivLoopUnrollingTwo</algorithm>
        <language>java</language>
        <executionTime>22696200</executionTime>
    </result>
    <result>
        <size>256</size>
        <algorithm>NaivLoopUnrollingFour</algorithm>
        <language>java</language>
        <executionTime>25414300</executionTime>
    </result>
    <result>
        <size>256</size>
        <algorithm>WinogradOriginal</algorithm>
        <language>java</language>
        <executionTime>32329300</executionTime>
    </result>
    <result>
        <size>256</size>
        <algorithm>WinogradScaled</algorithm>
        <language>java</language>
        <executionTime>66237100</executionTime>
    </result>
    <result>
        <size>256</size>
        <algorithm>StrassenNaiv</algorithm>
        <language>java</language>
        <executionTime>49573500</executionTime>
    </result>
    <result>
        <size>256</size>
        <algorithm>StrassenWinograd</algorithm>
        <language>java</language>
        <executionTime>54526200</executionTime>
    </result>
    <result>
        <size>256</size>
        <algorithm>III_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>54154000</executionTime>
    </result>
    <result>
        <size>256</size>
        <algorithm>III_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>46527800</executionTime>
    </result>
    <result>
        <size>256</size>
        <algorithm>IV_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>18680800</executionTime>
    </result>
    <result>
        <size>256</size>
        <algorithm>IV_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>12154200</executionTime>
    </result>
    <result>
        <size>256</size>
        <algorithm>V_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>48774800</executionTime>
    </result>
    <result>
        <size>256</size>
        <algorithm>V_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>38593000</executionTime>
    </result>
    <result>
        <size>256</size>
        <algorithm>III_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>53664100</executionTime>
    </result>
    <result>
        <size>256</size>
        <algorithm>IV_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>28816300</executionTime>
    </result>
    <result>
        <size>512</size>
        <algorithm>NaivOnArray</algorithm>
        <language>java</language>
        <executionTime>648345400</executionTime>
    </result>
    <result>
        <size>512</size>
        <algorithm>NaivLoopUnrollingTwo</algorithm>
        <language>java</language>
        <executionTime>320530500</executionTime>
    </result>
    <result>
        <size>512</size>
        <algorithm>NaivLoopUnrollingFour</algorithm>
        <language>java</language>
        <executionTime>404187500</executionTime>
    </result>
    <result>
        <size>512</size>
        <algorithm>WinogradOriginal</algorithm>
        <language>java</language>
        <executionTime>375266100</executionTime>
    </result>
    <result>
        <size>512</size>
        <algorithm>WinogradScaled</algorithm>
        <language>java</language>
        <executionTime>238133200</executionTime>
    </result>
    <result>
        <size>512</size>
        <algorithm>StrassenNaiv</algorithm>
        <language>java</language>
        <executionTime>210189700</executionTime>
    </result>
    <result>
        <size>512</size>
        <algorithm>StrassenWinograd</algorithm>
        <language>java</language>
        <executionTime>211775200</executionTime>
    </result>
    <result>
        <size>512</size>
        <algorithm>III_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>257344500</executionTime>
    </result>
    <result>
        <size>512</size>
        <algorithm>III_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>260555700</executionTime>
    </result>
    <result>
        <size>512</size>
        <algorithm>IV_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>76588100</executionTime>
    </result>
    <result>
        <size>512</size>
        <algorithm>IV_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>79035700</executionTime>
    </result>
    <result>
        <size>512</size>
        <algorithm>V_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>2311539300</executionTime>
    </result>
    <result>
        <size>512</size>
        <algorithm>V_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>618939400</executionTime>
    </result>
    <result>
        <size>512</size>
        <algorithm>III_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>304400500</executionTime>
    </result>
    <result>
        <size>512</size>
        <algorithm>IV_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>110097200</executionTime>
    </result>
    <result>
        <size>1024</size>
        <algorithm>NaivOnArray</algorithm>
        <language>java</language>
        <executionTime>7868997400</executionTime>
    </result>
    <result>
        <size>1024</size>
        <algorithm>NaivLoopUnrollingTwo</algorithm>
        <language>java</language>
        <executionTime>8624319500</executionTime>
    </result>
    <result>
        <size>1024</size>
        <algorithm>NaivLoopUnrollingFour</algorithm>
        <language>java</language>
        <executionTime>7062581000</executionTime>
    </result>
    <result>
        <size>1024</size>
        <algorithm>WinogradOriginal</algorithm>
        <language>java</language>
        <executionTime>7338595900</executionTime>
    </result>
    <result>
        <size>1024</size>
        <algorithm>WinogradScaled</algorithm>
        <language>java</language>
        <executionTime>7227665800</executionTime>
    </result>
    <result>
        <size>1024</size>
        <algorithm>StrassenNaiv</algorithm>
        <language>java</language>
        <executionTime>1002666300</executionTime>
    </result>
    <result>
        <size>1024</size>
        <algorithm>StrassenWinograd</algorithm>
        <language>java</language>
        <executionTime>1204839700</executionTime>
    </result>
    <result>
        <size>1024</size>
        <algorithm>III_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>6305835300</executionTime>
    </result>
    <result>
        <size>1024</size>
        <algorithm>III_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>11756088800</executionTime>
    </result>
    <result>
        <size>1024</size>
        <algorithm>IV_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>903368300</executionTime>
    </result>
    <result>
        <size>1024</size>
        <algorithm>IV_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>969207700</executionTime>
    </result>
    <result>
        <size>1024</size>
        <algorithm>V_3_Sequential_Block</algorithm>
        <language>java</language>
        <executionTime>21196371500</executionTime>
    </result>
    <result>
        <size>1024</size>
        <algorithm>V_4_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>24722563300</executionTime>
    </result>
    <result>
        <size>1024</size>
        <algorithm>III_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>24369336500</executionTime>
    </result>
    <result>
        <size>1024</size>
        <algorithm>IV_5_Enhanced_Parallel_Block</algorithm>
        <language>java</language>
        <executionTime>2509146700</executionTime>
    </result>
</results>
